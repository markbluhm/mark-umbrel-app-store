services:
  app_proxy:
    environment:
      APP_HOST: authentik_web
      APP_PORT: 10000
      PROXY_AUTH_ADD: "false"

  server:
    image: ghcr.io/goauthentik/server:2025.4.1
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: qlz9PEqgrGWTQvbBEZy+UnM9VwrjPLgC94GygVeb3LOR76cbJ1OaAUIv2HyxKV+ELFb0NJZQzg/F2VwY
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: vRoQame6n8gCEn8imRi/6Yqjxf3hRxWH4J+sYJStLCBIy2S4
      # AUTHENTIK_EMAIL__HOST: 
      # AUTHENTIK_EMAIL__PORT: 587
      # AUTHENTIK_EMAIL__USERNAME: 
      # AUTHENTIK_EMAIL__PASSWORD: 
      COMPOSE_PORT_HTTP: 10000
      COMPOSE_PORT_HTTPS: 10443
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    ports:
      - "10000:10000"
      - "10443:10443"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    container_name: authentik_web

  worker:
    image: ghcr.io/goauthentik/server:2025.4.1
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: qlz9PEqgrGWTQvbBEZy+UnM9VwrjPLgC94GygVeb3LOR76cbJ1OaAUIv2HyxKV+ELFb0NJZQzg/F2VwY
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: vRoQame6n8gCEn8imRi/6Yqjxf3hRxWH4J+sYJStLCBIy2S4
      # AUTHENTIK_EMAIL__HOST: 
      # AUTHENTIK_EMAIL__PORT: 587
      # AUTHENTIK_EMAIL__USERNAME: 
      # AUTHENTIK_EMAIL__PASSWORD:
      COMPOSE_PORT_HTTP: 10000
      COMPOSE_PORT_HTTPS: 10443
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    container_name: authentik_server

  postgres:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: vRoQame6n8gCEn8imRi/6Yqjxf3hRxWH4J+sYJStLCBIy2S4
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    container_name: authentik_postgres

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
    container_name: authentik_redis
volumes:
  database:
    driver: local
  redis:
    driver: local